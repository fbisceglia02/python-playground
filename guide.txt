python can adapt to everything from ml to game dev, ot etc.

1. creating a rock paper scissors game

create a rock paper scissors
1. create a variable called player_choice, setting it equal to rock
syntax is <var name> (convention in name for spaces is underscore), the = sign, the assign operator, and the variable value. 

type dictionary in python
{"key": "value", "key":"value"}
the key and the value are both variable

the input in python
input('string message to ask the input')

libraries:
at the top -> import <library>

lists: arrays in python
foods = ["pizza", "pasta"]


random library in python
random item from a list
list = random.choice(<list>)
ex:
dinner = random.choice(food)

functiona args in python
function(arg1, arg2):
 

if statements in python
if <condition>:
  <operation in true>
else:
  <operation in false>

to print the type of a variable:
print(type(<variable>))
ex
print(type(name)) => str

to check if a variable is of a specific type:
print(isinstance(<variable>, <type>))
ex
print(isinstance(name, str)) => True


Make variables of a specific types using a constructor
<variable> = <type>(<value>)
ex
age = float(10)
* you could also extract the value of another variable instead of the value in the type constructor

other data types
- complex for complex numbers
- bool for booleans
- list for lists
- tuple for tuples
- range fo ranges
- dict for dictionaries
- set for sets

operators
= assignment operator

arithmetics operators
+ also support negative numbers, and used also to concat strings
-
*
/
%
** double multiplication
// rounds down to the lower number

comparator operators
== != > <=

boolean operators
not -> condition not 

and => prints the last regardless it is False

or => returns the first that is not false

--
Bitwise operators

very rarely use
& performs binary AND
| perform  binary or
^ perform binary xor
~ perform a binary not
<< shift left operation
>> shift right operation


is => check if a is b
in => check if a is contained in b


Ternary operator
  return <any> if <condition> else <else return>

------

Strings
can be concated with +
can add something to the string with +=
ex
String='hello'
addition='world'
String += addition
print(String) 'helloworld'